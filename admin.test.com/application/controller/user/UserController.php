<?php/*------------ * 用户管理(管理员) *-----------*/use application\module\UserModule;class UserController extends Controller{	public function __construct(){		parent::__construct();		$this->module = new UserModule();	}	//用户管理	public function index(){		$user = $this->module->getUser();		$this->assign('user',$user);	}	//添加用户	public function user_add(){		if($this->post){			$password = md5($this->post['password']);			$addtime = date('Y-m-d H:i:s');						$data['uname'] = $this->post['uname'];			$data['password'] = $password;			$data['rid'] = $this->post['rid'];			$data['addtime'] = $addtime;			$data['status'] = $this->post['status'];						if($this->module->addUser($data)){				$this->ajaxReturn('添加成功',200);			}else{				$this->ajaxReturn('添加失败');			}		}else{			if($role = $this->module->getRole()){				$this->assign('role',$role);			}		}	}	//编辑用户	public function user_edit(){		if($this->post){			if(!$this->post['uname'] || !$this->post['password']){				$this->ajaxReturn('用户名或密码不能为空');			}			$password = md5($this->post['password']);						$data['uname'] = $this->post['uname'];			$data['password'] = $password;			$data['rid'] = $this->post['rid'];			$data['status'] = $this->post['status'];			if($this->module->editUser($data, $this->post['id'])){				$this->ajaxReturn('修改成功',200);			}else{				$this->ajaxReturn('修改失败');			}		}else if($this->get['id']){			$user = $this->module->getUserById($this->get['id']);			$role = $this->module->getRole();			if($user && $role){				$this->assign('user',$user);				$this->assign('role',$role);			}else{				$this->ajaxReturn('用户不存在');			}		}	}	//删除用户	public function user_del(){		if($this->post['id']){			foreach ($this->post['id'] as $val){				if($val == 1){					$this->ajaxReturn('root用户无法删除');				}			}			if($this->module->delUser($this->post['id'])){				$this->ajaxReturn('删除成功',200);			}		}else if($this->get['id']){			if($this->get['id'] == 1){				$this->ajaxReturn('root用户无法删除');			}			if($this->module->delUser($this->get['id'])){				$this->ajaxReturn('删除成功',200);			}		}		$this->ajaxReturn('删除失败');	}	//修改用户密码	public function user_modPwd(){		if($this->post){			if($this->post['new_password'] !== $this->post['re_password']){				$this->ajaxReturn('二次密码输入不一致，请重新输入');			}			$row = $this->module->getUserById($_SESSION['uid']);			if(md5($this->post['old_password']) !== $row['password']){				$this->ajaxReturn('原始密码输入错误');			}			$data['password'] = md5($this->post['new_password']);			if($this->module->editUser($data, $_SESSION['uid'])){				$this->ajaxReturn('修改成功',200);			}			$this->ajaxReturn('修改失败');		}else{			$this->assign('uname',$_SESSION['uname']);		}	}	//授权	public function user_auth(){		if(!$this->get['rid'] && !$this->get['uid']){			$this->ajaxReturn('参数错误');			exit;		}		if($this->get['uid']){			$row = $this->module->getRoleAuth($this->get['uid']);			$authArr = explode(',',$row['role_auth']);			//去掉用户的角色权限			$ugrant = '';			foreach ($this->post as $key=>$val){				foreach ($val as $k=>$v){					$ugrant .= $v .',';					if(in_array($v,$authArr)){						unset($this->post[$key][$k]);					}				}			}		}		$authStr = '';		if(is_array($this->post) && !empty($this->post)){			foreach ($this->post as $value){				if(!empty($value)){					foreach($value as $val){						$authStr .= $val.',';					}				}			}			$authStr = rtrim($authStr,',');		}		if($this->get['rid']){//角色授权			$data['role_auth'] = $authStr;			$row = $this->module->updateRoleAuth($data, $this->get['rid']);		}else{//用户授权			$data['auth'] = $authStr;			$row = $this->module->updateUserAuth($data, $this->get['uid']);		}		//更新当前用户session权限		if($row){			if($this->get['uid'] == $_SESSION['uid']){				$_SESSION['ugrant'] = trim($ugrant,',');			}			if($this->get['rid'] == $_SESSION['rid']){				$_SESSION['ugrant'] = $this->getUserGrant($_SESSION['uid']);			}			$this->ajaxReturn('修改成功',200);		}		$this->ajaxReturn('修改失败');	}	//用户权限列表	public function user_auth_list(){		if($this->get['uid'] && $this->get['uname']){//用户权限			$topTit = $this->get['uname'].'用户';			$param = 'uid='.$this->get['uid'].'&menuID=37';			$authArr = explode(',',$this->getUserGrant($this->get['uid']));		}		$authMenu = $this->_auth_list($authArr);		$this->assign('topTit',$topTit);		$this->assign('param',$param);		$this->assign('authMenu',$authMenu);	}	//角色权限列表	public function role_auth_list(){		if($this->get['rid'] && $this->get['rname']){//角色权限			$topTit = $this->get['rname'].'角色';			$param = 'rid='.$this->get['rid'].'&menuID=38';			$row = $this->module->getRoleById($this->get['rid']);			$authArr = explode(',',$row['role_auth']);		}		$authMenu = $this->_auth_list($authArr);		$this->assign('topTit',$topTit);		$this->assign('param',$param);		$this->assign('authMenu',$authMenu);	}	private function _auth_list($authArr){		$rows = $this->module->getMenu();		$authList = Common::list_to_tree($rows);		$authList = Common::tree_to_list($authList);		$authMenu = '<tr><td style="display:none;">';		foreach ($authList as $val){			if(in_array($val['id'],$authArr)){				$checked = 'checked';			}else{				$checked = '';			}			if($val['pid'] == 0){				$group = $val['id'];				$authMenu .= '</td></tr><tr><td style="background:#DDD;text-align:left;"><input type="checkbox" '.$checked.' name="p'.$val['id'].'[]" value="'.$val['id'].'" group="p'.$val['id'].'[]" class="checkboxCtrl" />'.$val['name'].'</td></tr><tr><td><div style="overflow:visible;">';			}else{				$authMenu .= '<div style="float:left;"><input type="checkbox" '.$checked.' name="p'.$group.'[]" value="'.$val['id'].'" />'.$val['name'].'</div>';			}		}		$authMenu .= '</div></td></tr><style type="text/css">.grid .gridTbody td div{overflow:visible;}</style>';		return $authMenu;	}	//角色管理	public function role(){		$rows = $this->module->getRole();		$this->assign('role',$rows);	}	//添加角色	public function role_add(){		if($this->post){						$data['role_name'] = $this->post['role_name'];			$data['role_desc'] = $this->post['role_desc'];			$data['role_status'] = $this->post['role_status'];						if($this->module->addRole($data)){				$this->ajaxReturn('添加成功',200);			}else{				$this->ajaxReturn('添加失败');			}		}	}	//编辑角色	public function role_edit(){		if($this->post){						$data['role_name'] = $this->post['role_name'];			$data['role_desc'] = $this->post['role_desc'];			$data['role_status'] = $this->post['role_status'];						if($this->module->editRole($data,$this->post['id'])){				$this->ajaxReturn('修改成功',200);			}else{				$this->ajaxReturn('修改失败');			}		}else if($this->get['id']){			if($role = $this->module->getRoleById($this->get['id'])){				$this->assign('role',$role);			}else{				$this->ajaxReturn('角色不存在');			}		}	}	//删除角色	public function role_del(){		if($this->post['id']){			foreach ($this->post['id'] as $val){				if($val == 1){					$this->ajaxReturn('root角色无法删除');				}			}			if($this->module->delRole($this->post['id'])){				$this->ajaxReturn('删除成功',200);			}		}else if($this->get['id']){			if($this->get['id'] == 1){				$this->ajaxReturn('root角色无法删除');			}			if($this->module->delRole($this->get['id'])){				$this->ajaxReturn('删除成功',200);			}		}	}	//获取用户权限 (角色权限+用户自身的权限)	private function getUserGrant($uid){		$row = $this->module->getUserGrant($uid);		$authStr = $row['role_auth'].','.$row['auth'];		return $authStr;	}	//用户登录	public function login(){ 		if($_SESSION['uname'] && $_SESSION['uid'] > 0 && $_SESSION['login'] === true){			CommonExt::toUrl('index');		}		if(!$this->post){			return false;		}		if($this->post['checkCode'] != $_SESSION['checkCode']){			$this->response( ResPonseExt::getMsg(10001) );		} 		$password = md5($this->post['password']);		if(!$row = $this->module->checkUser($this->post['uname'],$password)){			$this->response( ResPonseExt::getMsg(10002) );		}		if(!$row['status']){			$this->response( ResPonseExt::getMsg(10003) );		}		//设置用户session信息		$_SESSION['uname'] = $row['uname'];		$_SESSION['uid'] = $row['id'];		$_SESSION['rid'] = $row['rid'];		$_SESSION['login'] = true;		//设置用户权限信息		//setcookie('ugrant',$this->getGrant($row['id']));		$_SESSION['ugrant'] = $this->getUserGrant($row['id']);		//记录操作		//$this->addActLog('login');				$this->response( ResPonseExt::getMsg(10000),1 );	}	//用户退出	public function logout(){		//$this->addActLog('logout');		session_destroy();		unset($_SESSION);		CommonExt::toUrl('login');	}}